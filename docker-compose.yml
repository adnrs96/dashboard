version: '3.7'

services:
  reverse_proxy:
    image: traefik
    command: --api --docker
    ports:
      - 80:80
      - 8081:8080
    networks:
      - storynet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  database:
    image: postgres:10
    depends_on:
      - reverse_proxy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=asyncy
    ports:
      - 5432:5432
    networks:
      - storynet
    volumes:
      - postgres-data:/var/lib/postgresql/data
    labels:
      - 'traefik.frontend.rule=Host:pg.docker.localhost'
      - 'traefik.network=storynet'
      - 'traefik.enable=true'

  database_explorer:
    image: dpage/pgadmin4
    depends_on:
      - database
    environment:
      - PGADMIN_DEFAULT_EMAIL=dev@storyscript.io
      - PGADMIN_DEFAULT_PASSWORD=toto
    labels:
      - 'traefik.frontend.rule=Host:pgadmin.docker.localhost'
      - 'traefik.network=storynet'
      - 'traefik.enable=true'
      - 'traefik.port=80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - storynet

  graphql:
    image: asyncy/platform-graphql
    command: --init
    depends_on:
      - database
    ports:
      - 5000:5000
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://asyncy_authenticator:PLEASE_CHANGE_ME@database/asyncy
      - ROOT_DATABASE_URL=postgres://postgres:postgres@database/asyncy
    networks:
      - storynet
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=5000'
      - 'traefik.network=storynet'
      - 'traefik.frontend.rule=Host:graphql.docker.localhost'

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /docker-host/storyscript/postgres
  pgadmin-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /docker-host/storyscript/pgadmin

networks:
  storynet:
    external: false
    driver: bridge
    name: storynet
