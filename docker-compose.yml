version: '3.7'

services:
  database:
    image: postgres:10
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres']
      interval: 3s
      timeout: 2s
      retries: 7
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=asyncy
    ports:
      - 5432:5432
    networks:
      - storynet
    volumes:
      - postgres-data:/var/lib/postgresql/data

  graphql:
    image: asyncy/platform-graphql:c8569f7
    depends_on:
      - database
    command: ['./wait-for-postgres.sh', 'database', 'node', 'server.js']
    ports:
      - 5000:5000
    environment:
      - ENABLE_CORS=true
      - NODE_ENV=development
      - DATABASE_URL=postgresql://asyncy_authenticator:PLEASE_CHANGE_ME@database/asyncy
      - ROOT_DATABASE_URL=postgresql://postgres:postgres@database/asyncy
    networks:
      - storynet

  api:
    image: asyncy/dashboard-api:v0.2.1-11-g339bfea
    depends_on:
      - graphql
    networks:
      - storynet
    ports:
      - 8090:8090 # Make this port available, this is the only one working
    environment:
      - JWT_NAME=sadn
      - JWT_SECRET=@Jf3zt74D^ZNkz?EzrzFrwssT&7w+wBPWmW_Axsq#4Z*V+zB/@X(fY83^gh8}Hq;wW~%^)`UJfSte{3mwP%<d(Csr(M^6n&\6]XU#M@7xzx&E(V
      - PG_CONNECTION_STRING=postgresql://postgres:postgres@database/asyncy
      - AUTH_DEFAULT_REFERER=http://localhost:8080/signin
      - API_SSL=false
      - API_BASE_URL=localhost:8090
      - APP_BASE_URL=localhost
      - GH_APP_ID=${GH_APP_ID}
      - GH_CLIENT_ID=${GH_CLIENT_ID}
      - GH_CLIENT_SECRET=${GH_CLIENT_SECRET}
      - GH_APP_PEM=${GH_APP_PEM}

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /docker-host/storyscript/postgres
  pgadmin-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /docker-host/storyscript/pgadmin

networks:
  storynet:
    external: false
    driver: bridge
    name: storynet
